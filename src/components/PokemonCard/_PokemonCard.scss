$pokemon-card-width: 242px;
$pokemon-card-aspect-ratio: 16 / 10;

.pokemon-img {
  position: relative;

  img {
    height: 88px;
    width: 88px;
    object-fit: contain;
  }

  &.shadow::before {
    content: "";
    z-index: -1;
    position: absolute;
    width: 78px;
    height: 32px;
    bottom: -5px;
    right: 0;
    background: rgba(0, 0, 0, 0.3);
    mix-blend-mode: normal;
    border-radius: 100%;
    filter: blur(8px);
  }
}

.pokemon-card {
  width: $pokemon-card-width;
  aspect-ratio: $pokemon-card-aspect-ratio;
  padding: 16px;
  @include card-style();
  @include flex-container(column);
  justify-content: space-between;
  position: relative;
  overflow: hidden;
  user-select: none;
  cursor: pointer;

  .pokemon-img {
    position: absolute;
    bottom: 0px;
    right: 4px;
    z-index: 2;
  }

  .inner-bg {
    position: absolute;
    top: 0;
    left: 0;
  }

  .types {
    @include flex-container();
    justify-content: space-between;

    .type-names {
      @include flex-container();
      gap: 4px;
    }

    svg {
      width: 22px;
      height: 22px;
      line-height: 0;
    }
  }

  .characteristics {
    @include flex-container(column);
    gap: 12px;

    p {
      font-size: 12px;
      color: var(--text-secondary);
      font-weight: 500;
    }
    h2 {
      font-size: 16px;
      color: var(--text-primary);
      font-weight: 600;
    }
  }

  .characteristics,
  .types {
    p,
    h2 {
      position: relative;
      width: fit-content;
      z-index: 1;
      transition: color ease 0.3s;
    }

    svg {
      transition: fill ease 0.3s;
    }

    p::after,
    h2::after,
    svg::after {
      content: "";
      position: absolute;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.3);
      left: 0;
      z-index: -1;
      filter: blur(4px);
      border-radius: 100%;
      opacity: 0;
      transition: opacity ease 0.3s;
    }
  }

  &:hover {
    .inner-bg .type-circle,
    .inner-bg .type-circle-mask {
      width: calc(100% * 1.1);
      height: calc(100% * 1.3);
      border-radius: 0;
    }

    .characteristics,
    .types {
      z-index: 1;
      p,
      h2,
      svg {
        color: var(--bg-primary);
        fill: var(--bg-primary);
      }

      p::after,
      h2::after {
        opacity: 0.6;
      }
    }
  }
}
